apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres-container
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          ports:
            - containerPort: {{ .Values.postgresService.port }}
          env:
            - name: POSTGRES_USER
              value: "{{ .Values.postgres.env.POSTGRES_USER }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.postgres.env.POSTGRES_PASSWORD }}"
            - name: POSTGRES_DB
              value: "{{ .Values.postgres.env.POSTGRES_DB }}"
            - name: PGDATA
              value: "/var/lib/postgresql/data/subdir"
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - "{{ .Values.postgres.env.POSTGRES_USER }}"
            initialDelaySeconds: {{ .Values.postgres.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.postgres.readinessProbe.periodSeconds }}
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
            - name: postgres-init
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: postgres-init
          configMap:
            name: postgres-config

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: {{ .Values.postgresService.port }}
      targetPort: {{ .Values.postgresService.targetPort }}
  type: {{ .Values.postgresService.type }}
